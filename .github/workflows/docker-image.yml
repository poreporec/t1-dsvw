name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build_and_scan:

    runs-on: ubuntu-latest
    env:
        PC_USER: ${{ secrets.PC_USER }}
        PC_PASS: ${{ secrets.PC_PASS }}
        PC_CONSOLE_URL: ${{ secrets.PC_CONSOLE_URL }}
        IMAGE_NAME: porec/store-dsvw:latest
        PRE_BUILD_GIT_SCAN_FLAG: true
        PRISMA_API_URL: https://api.eu.prismacloud.io
    
    steps:
    - uses: actions/checkout@v2

    - name: Run Checkov for Dockerfile
      id: bridgecrew_docker
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        soft_fail: true # optional: do not return an error code if there are failed checks
        framework: dockerfile # (choose from 'cloudformation', 'terraform', 'kubernetes', 'serverless', 'arm', 'terraform_plan', 'helm', 'dockerfile', 'secrets', 'json', 'all')
        quiet: true
        output_format: cli # optional: the output format, one of: cli, json, junitxml, github_failed_only
        log_level: WARNING # optional: set log level. Default WARNING
        api-key: ${{ secrets.BC_API_KEY }}

    - name: Twistcli download
      run: curl -s -k -u $PC_USER:$PC_PASS $PC_CONSOLE_URL/api/v1/util/twistcli -v -o twistcli;chmod +x twistcli
    
    - name: Scan Repo with Prisma Cloud
      run: bash ./scripts/reposcan.sh
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME
    
    - name: Scan Image with Prisma Cloud
      run: ./twistcli images scan --u $PC_USER --p $PC_PASS --address $PC_CONSOLE_URL --details $IMAGE_NAME
      
    - name: Sandbox image in Prisma Cloud
      run: sudo ./twistcli sandbox -u $PC_USER --p $PC_PASS --address $PC_CONSOLE_URL --output-file "sandbox.json" --analysis-duration 1m $IMAGE_NAME

    - name: Run Checkov for K8S Manifest file
      id: bridgecrew_yaml
      uses: bridgecrewio/bridgecrew-action@master
      with:
        directory: ./deploy
        soft_fail: true # optional: do not return an error code if there are failed checks
        framework: kubernetes # optional: (choose from 'cloudformation', 'terraform', 'kubernetes', 'serverless', 'arm', 'terraform_plan', 'helm', 'dockerfile', 'secrets', 'json', 'all')
        quiet: true
        output_format: cli # optional: the output format, one of: cli, json, junitxml, github_failed_only
        log_level: WARNING # optional: set log level. Default WARNING
        api-key: ${{ secrets.BC_API_KEY }}
